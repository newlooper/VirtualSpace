<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="VDW.CTM.Desktop.Create" xml:space="preserve">
    <value>创建新的虚拟桌面</value>
  </data>
  <data name="VDW.CTM.Desktop.Remove" xml:space="preserve">
    <value>删除虚拟桌面</value>
  </data>
  <data name="VDW.CTM.Window.Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="VDW.CTM.Window.PinApp" xml:space="preserve">
    <value>在所有桌面上显示此应用的窗口</value>
  </data>
  <data name="VDW.CTM.Window.PinWin" xml:space="preserve">
    <value>在所有桌面上显示此窗口</value>
  </data>
  <data name="VersionCheckFail" xml:space="preserve">
    <value>不支持的 Windows 版本
应用程序将退出

支持的列表
====================================
VirtualSpace10	Windows 10	Redstone5(17763)
VirtualSpace10	Windows 10	19H1(18362)
VirtualSpace10	Windows 10	19H2(18363)
VirtualSpace10	Windows 10	20H1(19041)
VirtualSpace10	Windows 10	20H2(19042)
VirtualSpace10	Windows 10	21H1(19043)
VirtualSpace10	Windows 10	21H2(19044)
VirtualSpace(11)	Windows 11	21H2(22000)
====================================</value>
  </data>
  <data name="Rule.Op.Eq" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="Rule.Op.Ssw" xml:space="preserve">
    <value>以...开头</value>
  </data>
  <data name="Rule.Op.Esw" xml:space="preserve">
    <value>以...结尾</value>
  </data>
  <data name="Rule.Op.Sc" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="Rule.Op.Regex" xml:space="preserve">
    <value>正则表达式</value>
  </data>
  <data name="Rule.AtLeastOne" xml:space="preserve">
    <value>至少需要一条窗口规则。</value>
  </data>
  <data name="Rule.InvalidRegex" xml:space="preserve">
    <value>无效的正则表达式。</value>
  </data>
  <data name="Rule.NameRequired" xml:space="preserve">
    <value>是必须的。</value>
  </data>
  <data name="VDW.CTM.Window.NewRule" xml:space="preserve">
    <value>为此窗口创建规则...</value>
  </data>
  <data name="Rule.New" xml:space="preserve">
    <value>新规则</value>
  </data>
  <data name="Error.MoveWindowToDesktop" xml:space="preserve">
    <value>窗口 【{0}】 匹配规则 【{1}】，但移动时发生错误。
可能的原因：
- 窗口无效。
- 目标桌面不存在。
- 目标桌面无效。</value>
  </data>
  <data name="Error.Title" xml:space="preserve">
    <value>错误！</value>
  </data>
  <data name="VDW.CTM.Window.HideFromView" xml:space="preserve">
    <value>从视图隐藏</value>
  </data>
  <data name="VDW.CTM.Desktop.UnHideWindow" xml:space="preserve">
    <value>取消隐藏窗口</value>
  </data>
  <data name="VDW.CTM.Window.Screen" xml:space="preserve">
    <value>屏幕</value>
  </data>
  <data name="Nav.CircleHType.NextRow" xml:space="preserve">
    <value>切换到下一行</value>
  </data>
  <data name="Nav.CircleHType.SameRow" xml:space="preserve">
    <value>在同一行内循环</value>
  </data>
  <data name="KB.Hotkey.Cleared" xml:space="preserve">
    <value>热键已清除。</value>
  </data>
  <data name="KB.Hotkey.Reg.Success" xml:space="preserve">
    <value>热键注册成功。</value>
  </data>
  <data name="KB.Hotkey.Reg.Fail" xml:space="preserve">
    <value>热键注册失败。</value>
  </data>
  <data name="KB.Hotkey.SettingsSaved" xml:space="preserve">
    <value>设置已保存。</value>
  </data>
  <data name="KB.Hotkey.KeyCheck" xml:space="preserve">
    <value>必须选择一个非修改类键。</value>
  </data>
</root>